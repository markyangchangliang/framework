spring:
  redis:
    database: 1 # 数据库序号
    host: 127.0.0.1 # 连接主机
    port: 6379 # 端口号
    password: # Redis密码

eureka: # 注册中心配置
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka/ # 注册地址
    healthcheck:
      enabled: true
    registry-fetch-interval-seconds: 2 # 5秒拉取信息 默认60秒
  instance:
    lease-renewal-interval-in-seconds: 2 # Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则），默认30
    lease-expiration-duration-in-seconds: 180 # Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己），默认90

auth:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule
system:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.BestAvailableRule
zuul:
  ratelimit: # 限流策略
    enabled: false # 开启限流
    default-policy-list: # 默认限流策略
      - limit: 20 # 每个刷新时间窗口对应的请求数量限制
        quota: 30 # 每个刷新时间窗口对应的请求时间限制（秒）
        refresh-interval: 60 # 刷新时间窗口 (秒)
        type:
          - url # 通过请求路径区分
          - httpmethod # 通过请求方法区分
          - origin # 通过客户端IP地址区分
          - user # 通过登录用户名进行区分，也包括匿名用户
    policy-list:
      auth: # 认证服务限流策略
        - limit: 10 # 每个刷新时间窗口对应的请求数量限制
          quota: 10 # 每个刷新时间窗口对应的请求时间限制（秒）
          refresh-interval: 60 # 刷新时间窗口 (秒)
          type:
            - url # 通过请求路径区分
            - httpmethod # 通过请求方法区分
            - origin # 通过客户端IP地址区分
            - user # 通过登录用户名进行区分，也包括匿名用户

knife4j:
  production: false # 关闭文档

framework: # 自定义配置
  upload:
    fs: # 本地文件配置
      path: /Users/yangchangliang/Temp/Upload/markyang # 文件路径
  auth:
    spring-boot-admin-ip: localhost # SpringBootAdmin监控服务的IP
    permitted-uri-patterns: [
    ]